/*
https://leetcode.com/problems/unique-number-of-occurrences/

1207. Unique Number of Occurrences

Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000
*/

//============================================================================================//
//============================================================================================//
//My solution: 0ms, beats 100%

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        unordered_map<int,int> freq;
        for(int i = 0 ; i < arr.size(); i++)
        {
            freq[arr[i]]++;
        }
        
        set <int> seenFrequences;
        for (auto it : freq)
        {
            if (seenFrequences.count(it.second) > 0) return false;
            seenFrequences.insert(it.second);
        }
        return true;
    }
};
