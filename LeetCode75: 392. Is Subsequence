/*
https://leetcode.com/problems/is-subsequence/description/?envType=study-plan-v2&envId=leetcode-75
392. Is Subsequence

Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false
 

Constraints:

0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.
 

Follow up: Suppose there are lots of incoming s, say s1, s2, ..., sk where k >= 109, and you want to check one by one to see if t has its subsequence. In this scenario, how would you change your code?

*/


//===================================================================================//
//===================================================================================//
//My solution: 0ms, beats 100%, الحمد لله

class Solution {
public:
    bool isSubsequence(string s, string t) {
        

        int s_length = s.length();
        int t_length = t.length();
        if(s_length == 0) return true;
        if(s_length > 0 && t_length == 0) return false;

        int sptr = 0;
        int tptr = 0;
        while (sptr < s_length && tptr < t_length)
        {
            if(s[sptr] == t[tptr])
            {
                sptr++;
                if (sptr == s_length) return true;
            }
            tptr++;
        }
        return false;
    }
};
