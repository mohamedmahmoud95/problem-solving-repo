

/*
 https://leetcode.com/problems/find-the-difference-of-two-arrays/
 
 2215. Find the Difference of Two Arrays
 EASY
 
 Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:

 answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
 answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
 Note that the integers in the lists may be returned in any order.

  

 Example 1:

 Input: nums1 = [1,2,3], nums2 = [2,4,6]
 Output: [[1,3],[4,6]]
 Explanation:
 For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].
 For nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums2. Therefore, answer[1] = [4,6].
 Example 2:

 Input: nums1 = [1,2,3,3], nums2 = [1,1,2,2]
 Output: [[3],[]]
 Explanation:
 For nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], their value is only included once and answer[0] = [3].
 Every integer in nums2 is present in nums1. Therefore, answer[1] = [].
  

 Constraints:

 1 <= nums1.length, nums2.length <= 1000
 -1000 <= nums1[i], nums2[i] <= 1000
 */


 

//============================================================================================//
//============================================================================================//
//first solution, highly complex, passed 102/200 test cases
#include <iostream>
#include<vector>
using namespace std;
//class Solution {
//public:
//    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
//        vector<int> nums1Distincts;
//        vector<int> nums2Distincts;
//        for (int i = 0 ; i < nums1.size() ; i++)
//        {
//            //if it's already there
//            auto it = find (nums1Distincts.begin(), nums1Distincts.end(), nums1[i]);
//            if (it != nums1Distincts.end()){
//                continue;
//            }
//
//            //if not found in array2
//            auto it2 = find(nums2.begin(), nums2.end(), nums1[i]);
//            if (it2 == nums2.end()){
//                nums1Distincts.push_back(nums1[i]);
//            }
//            else{ //if found in both arrays
//            *it2 = -1; //mark as not distinct
//            }
//           
//        }
//       
//        for (int i = 0 ; i < nums2.size() ; i++)
//        {
//            if (nums2[i] == -1)
//            {
//                continue;
//            }
//            if (find(nums1.begin(), nums1.end(), nums2[i]) == nums1.end() && find(nums2Distincts.begin(), nums2Distincts.end(), nums2[i]) == nums2Distincts.end() ){
//                nums2Distincts.push_back(nums2[i]);
//            }
//        }
//        vector <vector<int>>result;
//        result.push_back(nums1Distincts);
//        result.push_back(nums2Distincts);
//        return result;
//    }
//};




//============================================================================================//
//============================================================================================//
//2nd solution, mmmeh.. a bit better, passed all test cases, 64ms, 
class Solution {
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
        vector<int> nums1Distincts;
        vector<int> nums2Distincts;

        for (int num : nums1) {
            if (find(nums2.begin(), nums2.end(), num) == nums2.end() &&
                find(nums1Distincts.begin(), nums1Distincts.end(), num) == nums1Distincts.end()) {
                nums1Distincts.push_back(num);
            }
        }

        for (int num : nums2) {
            if (find(nums1.begin(), nums1.end(), num) == nums1.end() &&
                find(nums2Distincts.begin(), nums2Distincts.end(), num) == nums2Distincts.end()) {
                nums2Distincts.push_back(num);
            }
        }

        return {nums1Distincts, nums2Distincts};
    }
};
int main(int argc, const char * argv[]) {
//    vector<int> num1 = {1,2,3};
//    vector<int> num2 = {2,4,6};
    vector<int> num1 = {1,2,3,3};
    vector<int> num2 = {1,1,2,2};
    Solution solution;
    vector<vector<int>> result = solution.findDifference(num1, num2);
//    vector<int> ::iterator it ;
//    for ( it = result.begin() ; it!= result.end(); it++)
//    {
//        cout<<*it <<"\t";
    
    
    vector<vector<int>>::iterator it = result.begin();

    for (; it != result.end(); ++it) {
        vector<int> x = *it;
        for (int i = 0 ; i < x.size(); i++)
        {
            cout<<x[i]<<"\t";
        }
        cout<<endl;
    }

    cout<<endl;
    return 0;
}



//============================================================================================//
//============================================================================================//
