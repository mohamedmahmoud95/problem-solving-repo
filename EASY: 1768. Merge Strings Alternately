//1768. Merge Strings Alternately
/*
 https://leetcode.com/problems/merge-strings-alternately/description/
 //1768. Merge Strings Alternately

 You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

 Return the merged string.

  

 Example 1:

 Input: word1 = "abc", word2 = "pqr"
 Output: "apbqcr"
 Explanation: The merged string will be merged as so:
 word1:  a   b   c
 word2:    p   q   r
 merged: a p b q c r
 Example 2:

 Input: word1 = "ab", word2 = "pqrs"
 Output: "apbqrs"
 Explanation: Notice that as word2 is longer, "rs" is appended to the end.
 word1:  a   b
 word2:    p   q   r   s
 merged: a p b q   r   s
 Example 3:

 Input: word1 = "abcd", word2 = "pq"
 Output: "apbqcd"
 Explanation: Notice that as word1 is longer, "cd" is appended to the end.
 word1:  a   b   c   d
 word2:    p   q
 merged: a p b q c   d
  

 Constraints:

 1 <= word1.length, word2.length <= 100
 word1 and word2 consist of lowercase English letters.
 */

//============================================================================================//
//============================================================================================//

#include <iostream>
using namespace std;

class Solution {
public:
    string mergeAlternately(string word1, string word2) {
        //get the max length of the two words
        int length_of_word1 = word1.length();
        int length_of_word2 = word2.length();
        int max_length = length_of_word1  > length_of_word2 ? length_of_word1:length_of_word2;

        string merged_string ;

        for (int i = 0 ; i < max_length ; i++)
        {
            if (i<length_of_word1)
                {
                    merged_string.push_back(word1[i]) ;
                }
            if (i<length_of_word2)
                {
                    merged_string.push_back(word2[i]);
                }
        }
        return merged_string;
    }

};

int main(int argc, const char * argv[]) {
    string word1 = "abd";
    string word2 = "12345";
    Solution solution;
    string merged_strings = solution.mergeAlternately(word1, word2);
    cout<<merged_strings<<endl;  //a1b2d345
    return 0;
}
