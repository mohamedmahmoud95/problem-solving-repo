/*
https://leetcode.com/problems/contains-duplicate-ii/description/

219. Contains Duplicate II

Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109
0 <= k <= 105
*/

//================================================================================//
//================================================================================//
//My solution, 53ms, beats 72.5%
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map <int, int> seenNumbers;
        for (int i = 0 ; i < nums.size() ; ++i )
        {
            if (seenNumbers.find(nums[i]) != seenNumbers.end()){
                if ((i - seenNumbers[nums[i]]) <= k) return true;
            }
            // if it exists, but not nearby, update the seen index to current
            seenNumbers[nums[i]] = i;
            
        }
        return false; //if no match found this far
    }
};
