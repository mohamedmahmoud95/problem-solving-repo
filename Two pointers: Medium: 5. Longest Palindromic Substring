
/*
https://leetcode.com/problems/longest-palindromic-substring/description/

5. Longest Palindromic Substring

Given a string s, return the longest 
palindromic
 
substring
 in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.
*/


//=========================================================================//
//=========================================================================//
//Two-pointer approaach, 5ms, beats 92%

class Solution {
public:
    string longestPalindrome(string s) {
        int start = 0, maxLength = 0;
        
        for (int i = 0; i < s.size(); i++) {
            expandFromCenter(s, i, i, start, maxLength);   // Odd-length
            expandFromCenter(s, i, i + 1, start, maxLength); // Even-length
        }
        
        return s.substr(start, maxLength);
    }

    void expandFromCenter(string &s, int left, int right, int &start, int &maxLength) {
        while (left >= 0 && right < s.size() && s[left] == s[right]) {
            left--;
            right++;
        }
        int len = right - left - 1;
        if (len > maxLength) {
            start = left + 1;
            maxLength = len;
        }
    }
};
